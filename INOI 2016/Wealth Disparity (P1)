// Solution on Codechef--> 
#include <bits/stdc++.h>
using namespace std;

long long int ans,a[1000000];
vector<long long int> adj[1000000];

 void dfs(long long int curmax,long long int curr){
   if((curmax-a[curr])>ans)
        ans=curmax-a[curr];
   for(int j=0;j<adj[curr].size();j++){
     dfs(max(curmax,a[curr]),adj[curr][j]);
   }
 }
 
int main(){
ios_base::sync_with_stdio(false);
        long long int n;
        cin >> n;
   for(long long int i=1;i<=n;i++){
        cin >> a[i];
   }
   long long int root;
   for(long long int i=0;i<n;i++){
        long long int p;
        cin >> p;
    if(p==-1)
        root=i+1;
    else
        adj[p].push_back(i+1);
   }
dfs(0,root);
cout << ans << endl;
return 0;
}
